Run Instructions:
Job runs are passed with two arguments, as follows:
    1st. [datasource_id]
    2nd. [T/F(Test Mode Selection-Must be "T" specifically if running test mode.)]
    
Spider runs are passed with three arguments, as follows:
    1st. [datasource_id]
    2nd. [T/F(Test Mode Selection-Must be "T" specifically if running test mode.)]
    3rd. [1/2/3/4/5 (Stage Selection-must be 1, 2, 3, 4 or 5 specifically.)
    4th. [M/A(Mailing Mode-This is only required if Stage Selection is 5. Must be "A" specificially if collecting for all months and "M" for monthly collection.)]

1. Run SourceForgeJobs.py given two arguments. SourceForgeJobs.py [datasource_id] [Test Mode]
2. Run SourceForgeSpider.py given three arguments. SourceForgeSpider.py [datsource_id] [Test Mode][Stage][Mailing Mode]
3. Run SourceForgeErrorFix.py given two arguments. SourceForgeErrorFix.py [datasource_id] [Test Mode]
    (Error fix will regather any statistic pages that failed to collect due to time out. This is only necessary to run if Stage Selection is 4.)
4. Run SourceForgeCleanUp.py given two arguments. SourceForgeCleanUp.py [datasource_id] [Test Mode]
5. Rerun SourceForgeSpider.py given three arguments. SourceForgeSpider.py [datsource_id] [Test Mode][Stage][Mailing Mode]
    (To avoid further erros, rerun SourceForgeSpider with the same Stage Selection number as initially run.)

SourceForge Jobs.py-creates jobs to be run from a pre-processed projects list
SourceForgeSpider.py-spiders pages based on pre-processed jobs list
SourceForgeErrorFix.py-reruns necessary jobs due to timeout errors
SourceForgeCleanUp.py-resets jobs stuck In_Progress due to machine error

Two text files must be created in order to run both test mode and the non-test mode. The format is as follows

dbInfo.txt & dbInfoTest.txt:

databasename
port#
username
password
tablename


   