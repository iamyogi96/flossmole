Run Instructions:
All runs are passed with two arguments, as follows:
    1st. [datasource_id]
    2nd. [T/F(Test Mode Selection-Must be "T" specifically if running test mode.)]
    
Steps 1-3 are a run set to collect all pages for each project. These steps
do not depend on any other steps. The mailing lists are collected for the month.
Steps 4 and 5 are a run set to collect all mailing list pages from the current month 
back to the last stored mailing list page. These steps depend on steps 1-3,
but do not have to be run every time set 1-3 is run. When running the complete mailing list set after 
a normal run of steps 1-3 with this updated code, there will be insert warnings for the current month's mailing lists. 
(Items already exist in database). This warnings can be avoided by commenting out the line
SourceForgeMailingLists.run(utils,datasource_id)
in SourceForgeSpider.py for steps 1-3 when intending to run steps 4-5, but it is not necessary.

1. Run SourceForgeJobs.py given two arguments. SourceForgeJobs.py [datasource_id] [Test Mode]
2. Run SourceForgeSpider.py given two arguments. SourceForgespider.py [datsource_id] [Test Mode]
3. Run SourceForgeErrorFix.py given two arguments. SourceForgeErrorFix.py [datasource_id] [Test Mode]
    (Error fix will regather any statistic pages that failed to collect due to time out.)
4. Run SourceForgeMailingJobs.py given two arguments. SourceForgeMailingJobs.py [datasource_id] [Test Mode]
5. Run SourceForgeMailingSpider.py given two arguments. SourceForgeMailingSpider.py [datasource_id] [Test Mode]



SourceForge Jobs.py-creates jobs to be run from a pre-processed projects list
SourceForgeSpider.py-spiders pages based on pre-processed jobs list
SourceForgeErrorFix.py-reruns necessary jobs due to timeout errors

Two text files must be created in order to run both test mode and the non-test mode. The format is as follows

dbInfo.txt & dbInfoTest.txt:

databasename
port#
username
password
tablename


   